openapi: 3.0.0
info:
  description: Ejemplo para blog.
  version: 1.0.0
  title: API de ejemplo para blog
servers:
  - url: 'https://antoniofernandez.com'
    description: 'Entorno de produccíon de apis'
  - url: 'https://development.antoniofernandez.com'
    description: 'Entorno de desarrollo de apis'
paths:

  /users:
    get:
      security: 
      - bearerAuth: []
      tags: 
        - user
      summary: listar usuario
      description: Este método lista usuarios
      parameters: 
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/skipParam'
        - name: name 
          in: query
          description: 'Filtro para buscar por nombre de usuario'
          schema:
            type: string
      responses:
        200:
          description: operacion correcta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        500:
          description: error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      security: 
      - bearerAuth: []
      tags:
        - user
      summary: crear usuarios
      description: Este método crea usuarios
      responses:
        200:
          description: operacion correcta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'




components:

  parameters:
    sortParam:
      name: sort
      in: query
      description: " ordenacion"
      example: "+fecha -nombre"
      schema:
        type: string
        
        
    limitParam:
      name: limit
      in: query
      description: "número de resultados a obtener"
      example: 50
      schema:
        type: integer    
    
    
    skipParam:
      name: skip
      in: query
      description: "número de resultados desde el que partir"
      example: 0
      schema:
        type: integer    


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:    
 
    User:
      type: object
      required: 
        - email
        - password
        - role
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
        password:
          type: string
          format: password
        email:
          type: string
          format: email
        role:
          type: string
          enum: 
            - superadmin
            - editor
            
            
    Error:
      type: object
      properties:
        code:
          description: Código de error
          type: string
        status:
          description: httpstatus
          type: integer
          format: int32
        type:
          type: string
          description: Tipo de error
        message:
          type: string
          description: Mensaje de error
